{"version":3,"sources":["constants/actions.js","store/reducers/taskReducer.js","store/reducers/rootReducer.js","store/store.js","theme.js","components/Container.js","components/Header.js","store/actions/taskActions.js","components/Todo.js","store/selectors/taskSelector.js","components/Tabs.js","components/TransitionAlert.js","components/TodoInput.js","components/GithubLogo.js","pages/task/index.js","App.js","index.js"],"names":["TaskActions","initState","lastDeletedTodoId","todos","id","isDone","body","isMarkedToBeDeleted","RootReducer","combineReducers","task","state","action","type","payload","map","todo","filter","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Theme","responsiveFontSizes","createMuiTheme","palette","primary","main","secondary","text","spreddable","useStyles","makeStyles","theme","root","width","height","breakpoints","down","paddingLeft","spacing","paddingRight","up","Container","children","styles","Box","className","Header","leftContent","rightContent","display","my","boxShadow","flexGrow","m","ToggleTodoToBeDeletedStateAction","successColor","color","success","warningColor","warning","dangerColor","error","crossedTextDecoration","textDecoration","connect","dispatch","toggleTodoState","ToggleTodoStateAction","editTodo","newTodoContent","EditTodoAction","toggleTodoToBeDeletedState","todoId","todoBody","useState","isEditing","setEditing","newTodoBody","setNewTodoBody","todoRef","useRef","editTodoEnterKeyCallback","useCallback","e","key","keyCode","stopPropagation","useEffect","currentTodoRef","current","addEventListener","removeEventListener","ref","TextField","variant","margin","fullWidth","value","onChange","target","IconButton","aria-label","onClick","flexDirection","justifyContent","Typography","getTodos","getDeletedTodoId","TabPanel","props","index","other","role","hidden","aria-labelledby","p","backgroundColor","background","paper","a11yProps","classes","useTheme","React","setValue","AppBar","position","event","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","deletePermanently","DeleteTodoPermanentlyAction","content","open","setOpen","timerId","setTimerId","setTimeout","Collapse","in","Alert","Button","size","clearTimeout","addTodo","Math","random","toString","AddTodoAction","setTodo","inputRef","addTodoEnterKeyCallback","currentInputRef","name","autoFocus","GitHubLogo","viewBox","d","TaskPage","href","App","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84621cf7.chunk.js","sourcesContent":["export const TaskActions = {\r\n  ADD_TODO: 'ADD_TODO',\r\n  TOGGLE_TODO_STATE: 'TOGGLE_TODO_STATE',\r\n  EDIT_TODO: 'EDIT_TODO',\r\n  TOGGLE_TODO_TO_BE_DELETED_STATE: 'TOGGLE_TODO_TO_BE_DELETED_STATE',\r\n  DELETE_TODO_PERMANENTLY: 'DELETE_TODO_PERMANENTLY'\r\n}\r\n","import { TaskActions } from '../../constants/actions'\r\n\r\nconst initState = {\r\n  lastDeletedTodoId: '',\r\n\r\n  todos: [\r\n    {\r\n      id: '1',\r\n      isDone: true,\r\n      body: 'Create todo app that helps users to manage their daily tasks.',\r\n      isMarkedToBeDeleted: false\r\n    },\r\n    {\r\n      id: '2',\r\n      isDone: true,\r\n      body:\r\n        'Create todo app that holds todos during the browser session. This means that tasks won`t be sent to the server or saved anywhere in the browser.',\r\n      isMarkedToBeDeleted: false\r\n    },\r\n    {\r\n      id: '3',\r\n      isDone: false,\r\n      body:\r\n        'Create todo app that stores todos on the server and uses the most advanced security tools and techniques. Check my github for more, probably it`s already done;)',\r\n      isMarkedToBeDeleted: false\r\n    }\r\n  ]\r\n}\r\n\r\nexport default function TaskReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case TaskActions.ADD_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          {\r\n            ...action.payload,\r\n            isMarkedToBeDeleted: false\r\n          },\r\n          ...state.todos\r\n        ]\r\n      }\r\n    }\r\n\r\n    case TaskActions.TOGGLE_TODO_STATE: {\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.map((todo) => {\r\n            if (todo.id === action.payload)\r\n              return {\r\n                ...todo,\r\n                isDone: !todo.isDone\r\n              }\r\n            return todo\r\n          })\r\n        ]\r\n      }\r\n    }\r\n\r\n    case TaskActions.EDIT_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.map((todo) => {\r\n            if (todo.id === action.payload.id)\r\n              return {\r\n                ...todo,\r\n                body: action.payload.body\r\n              }\r\n            return todo\r\n          })\r\n        ]\r\n      }\r\n    }\r\n\r\n    case TaskActions.TOGGLE_TODO_TO_BE_DELETED_STATE: {\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.map((todo) => {\r\n            if (todo.id === action.payload)\r\n              return {\r\n                ...todo,\r\n                isMarkedToBeDeleted: !todo.isMarkedToBeDeleted\r\n              }\r\n            return todo\r\n          })\r\n        ],\r\n        lastDeletedTodoId:\r\n          action.payload === state.lastDeletedTodoId ? '' : action.payload\r\n      }\r\n    }\r\n\r\n    case TaskActions.DELETE_TODO_PERMANENTLY: {\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos.filter((todo) => todo.id !== action.payload)],\r\n        lastDeletedTodoId:\r\n          action.payload === state.lastDeletedTodoId\r\n            ? ''\r\n            : state.lastDeletedTodoId\r\n      }\r\n    }\r\n\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport TaskReducer from './taskReducer'\r\n\r\nconst RootReducer = combineReducers({\r\n  task: TaskReducer\r\n})\r\n\r\nexport default RootReducer\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport RootReducer from './reducers/rootReducer'\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose\r\nconst enhancer = composeEnhancers(applyMiddleware())\r\n\r\n// create store and apply compose emhancers\r\nconst store = createStore(RootReducer, enhancer)\r\n\r\nexport default store\r\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\r\n\r\nconst Theme = responsiveFontSizes(\r\n  createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n      primary: { main: '#ff9800' },\r\n      secondary: { main: '#ff1744' },\r\n      text: {\r\n        primary: '#fff'\r\n      }\r\n    },\r\n    spreddable: {}\r\n  })\r\n)\r\n\r\nexport default Theme\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0)\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: theme.spacing(36),\r\n      paddingRight: theme.spacing(36)\r\n    }\r\n  }\r\n}))\r\n\r\nconst Container = ({ children }) => {\r\n  const styles = useStyles()\r\n  return <Box className={styles.root}>{children}</Box>\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.any\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Header = ({ leftContent, rightContent }) => {\r\n  return (\r\n    <Box display=\"flex\" my={2} boxShadow={8}>\r\n      <Box display=\"flex\" flexGrow={1} m={2}>\r\n        {leftContent}\r\n      </Box>\r\n      <Box width={48} height={48} m={2}>\r\n        {rightContent}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  leftContent: PropTypes.any,\r\n  rightContent: PropTypes.any\r\n}\r\n\r\nexport default Header\r\n","import { TaskActions } from '../../constants/actions'\r\n\r\nexport const AddTodoAction = (body) => {\r\n  const todo = {\r\n    id: (Math.random() * 10101010101).toString(),\r\n    body,\r\n    isDone: false\r\n  }\r\n  return { type: TaskActions.ADD_TODO, payload: todo }\r\n}\r\n\r\nexport const ToggleTodoStateAction = (id) => {\r\n  return { type: TaskActions.TOGGLE_TODO_STATE, payload: id }\r\n}\r\n\r\nexport const EditTodoAction = (id, body) => {\r\n  return { type: TaskActions.EDIT_TODO, payload: { id, body } }\r\n}\r\n\r\nexport const ToggleTodoToBeDeletedStateAction = (id) => {\r\n  return { type: TaskActions.TOGGLE_TODO_TO_BE_DELETED_STATE, payload: id }\r\n}\r\n\r\nexport const DeleteTodoPermanentlyAction = (id) => {\r\n  return { type: TaskActions.DELETE_TODO_PERMANENTLY, payload: id }\r\n}\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { Box, IconButton, TextField, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded'\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded'\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded'\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ToggleTodoStateAction,\r\n  EditTodoAction,\r\n  ToggleTodoToBeDeletedStateAction\r\n} from '../store/actions/taskActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  successColor: {\r\n    color: theme.palette.success.main\r\n  },\r\n  warningColor: {\r\n    color: theme.palette.warning.main\r\n  },\r\n  dangerColor: {\r\n    color: theme.palette.error.main\r\n  },\r\n  crossedTextDecoration: {\r\n    textDecoration: 'line-through',\r\n    color: theme.palette.success.main\r\n  }\r\n}))\r\n\r\nconst Todo = ({\r\n  id,\r\n  isDone,\r\n  todoBody,\r\n  toggleTodoState,\r\n  editTodo,\r\n  toggleTodoToBeDeletedState\r\n}) => {\r\n  const styles = useStyles()\r\n  const [isEditing, setEditing] = useState(false)\r\n  const [newTodoBody, setNewTodoBody] = useState(todoBody)\r\n  const todoRef = useRef()\r\n\r\n  const closeEdit = () => {\r\n    setEditing(false)\r\n    setNewTodoBody(todoBody)\r\n  }\r\n\r\n  const handleEditTodoChange = (e) => {\r\n    setNewTodoBody(e.target.value)\r\n  }\r\n\r\n  const handleEditTodoButtonClick = () => {\r\n    editTodo(id, newTodoBody)\r\n    setEditing(false)\r\n  }\r\n\r\n  const editTodoEnterKeyCallback = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter' || e.keyCode === 13) {\r\n        editTodo(id, newTodoBody)\r\n        setEditing(false)\r\n        e.stopPropagation()\r\n      }\r\n    },\r\n    [newTodoBody, editTodo, id]\r\n  )\r\n\r\n  useEffect(() => {\r\n    const currentTodoRef = todoRef.current\r\n    if (isEditing && currentTodoRef)\r\n      currentTodoRef.addEventListener('keyup', editTodoEnterKeyCallback)\r\n\r\n    return () => {\r\n      if (isEditing && currentTodoRef)\r\n        currentTodoRef.removeEventListener('keyup', editTodoEnterKeyCallback)\r\n    }\r\n  }, [todoRef, isEditing, editTodoEnterKeyCallback])\r\n\r\n  return (\r\n    <Box display=\"flex\" ref={todoRef}>\r\n      {isEditing ? (\r\n        <>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            value={newTodoBody}\r\n            onChange={handleEditTodoChange}\r\n          />\r\n          <IconButton\r\n            aria-label=\"cancel\"\r\n            className={styles.dangerColor}\r\n            onClick={closeEdit}\r\n          >\r\n            <CloseRoundedIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"confirmEdit\"\r\n            className={styles.successColor}\r\n            onClick={handleEditTodoButtonClick}\r\n          >\r\n            <DoneRoundedIcon />\r\n          </IconButton>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n            <IconButton\r\n              aria-label=\"do\"\r\n              className={styles.successColor}\r\n              onClick={() => toggleTodoState(id)}\r\n            >\r\n              <DoneRoundedIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box width=\"100%\" my={2}>\r\n            <Typography\r\n              className={isDone ? styles.crossedTextDecoration : ''}\r\n              variant=\"body1\"\r\n            >\r\n              {todoBody}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n            <IconButton\r\n              aria-label=\"edit\"\r\n              className={styles.warningColor}\r\n              onClick={() => setEditing(true)}\r\n            >\r\n              <EditRoundedIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              className={styles.dangerColor}\r\n              onClick={() => toggleTodoToBeDeletedState(id)}\r\n            >\r\n              <DeleteOutlineRoundedIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nTodo.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  isDone: PropTypes.bool.isRequired,\r\n  todoBody: PropTypes.string.isRequired,\r\n  toggleTodoState: PropTypes.func.isRequired,\r\n  editTodo: PropTypes.func.isRequired,\r\n  toggleTodoToBeDeletedState: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapActionToProps = (dispatch) => {\r\n  return {\r\n    toggleTodoState: (id) => dispatch(ToggleTodoStateAction(id)),\r\n    editTodo: (id, newTodoContent) =>\r\n      dispatch(EditTodoAction(id, newTodoContent)),\r\n    toggleTodoToBeDeletedState: (todoId) =>\r\n      dispatch(ToggleTodoToBeDeletedStateAction(todoId))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapActionToProps)(Todo)\r\n","export const getTodos = (state) => {\r\n  return state.task.todos.filter((todo) => !todo.isMarkedToBeDeleted)\r\n}\r\n\r\nexport const getDeletedTodoId = (state) => {\r\n  return state.task.lastDeletedTodoId\r\n}\r\n","import React from 'react'\r\nimport SwipeableViews from 'react-swipeable-views'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport { AppBar, Tabs as MuiTabs, Tab, Box } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\nimport { getTodos } from '../store/selectors/taskSelector'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}))\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  }\r\n}\r\n\r\nconst Tabs = ({ my, todos }) => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [value, setValue] = React.useState(0)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index)\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root} my={my}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <MuiTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"todo tabs\"\r\n        >\r\n          <Tab label=\"All\" {...a11yProps(0)} />\r\n          <Tab label=\"Active\" {...a11yProps(1)} />\r\n          <Tab label=\"Completed\" {...a11yProps(2)} />\r\n        </MuiTabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {value === 0 &&\r\n            todos.map((todo) => {\r\n              return (\r\n                <Todo\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  isDone={todo.isDone}\r\n                  todoBody={todo.body}\r\n                />\r\n              )\r\n            })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          {value === 1 &&\r\n            todos\r\n              .filter((todo) => todo.isDone === false)\r\n              .map((todo) => (\r\n                <Todo\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  isDone={todo.isDone}\r\n                  todoBody={todo.body}\r\n                />\r\n              ))}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          {value === 2 &&\r\n            todos\r\n              .filter((todo) => todo.isDone === true)\r\n              .map((todo) => (\r\n                <Todo\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  isDone={todo.isDone}\r\n                  todoBody={todo.body}\r\n                />\r\n              ))}\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </Box>\r\n  )\r\n}\r\n\r\nTabs.propTypes = {\r\n  my: PropTypes.number,\r\n  todos: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: getTodos(state)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Tabs)\r\n","import React, { useState, useEffect } from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { Button, Box } from '@material-ui/core'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getDeletedTodoId } from '../store/selectors/taskSelector'\r\nimport {\r\n  ToggleTodoToBeDeletedStateAction,\r\n  DeleteTodoPermanentlyAction\r\n} from '../store/actions/taskActions'\r\n\r\nconst TransitionAlert = ({\r\n  my,\r\n  content,\r\n  lastDeletedTodoId,\r\n  toggleTodoToBeDeletedState,\r\n  deletePermanently\r\n}) => {\r\n  const [open, setOpen] = useState(true)\r\n  const [timerId, setTimerId] = useState()\r\n\r\n  const handleUndoClick = () => {\r\n    toggleTodoToBeDeletedState(lastDeletedTodoId)\r\n    clearTimeout(timerId)\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lastDeletedTodoId) {\r\n      setOpen(true)\r\n      setTimerId(\r\n        setTimeout(() => {\r\n          // this will work cause func remembers `lastDeletedTodoId` that was in the scope at the creation time\r\n          deletePermanently(lastDeletedTodoId)\r\n        }, 5000)\r\n      )\r\n    } else {\r\n      setOpen(false)\r\n    }\r\n  }, [deletePermanently, lastDeletedTodoId])\r\n\r\n  return (\r\n    <Box my={my}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          action={\r\n            <Button color=\"inherit\" size=\"small\" onClick={handleUndoClick}>\r\n              UNDO\r\n            </Button>\r\n          }\r\n        >\r\n          {content}\r\n        </Alert>\r\n      </Collapse>\r\n    </Box>\r\n  )\r\n}\r\n\r\nTransitionAlert.propTypes = {\r\n  my: PropTypes.number,\r\n  content: PropTypes.string.isRequired,\r\n  lastDeletedTodoId: PropTypes.string.isRequired,\r\n  toggleTodoToBeDeletedState: PropTypes.func.isRequired,\r\n  deletePermanently: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lastDeletedTodoId: getDeletedTodoId(state)\r\n  }\r\n}\r\n\r\nconst mapActionToProps = (dispatch) => {\r\n  return {\r\n    toggleTodoToBeDeletedState: (id) =>\r\n      dispatch(ToggleTodoToBeDeletedStateAction(id)),\r\n    deletePermanently: (id) => dispatch(DeleteTodoPermanentlyAction(id))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(TransitionAlert)\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\r\nimport { Box, Button, TextField } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { AddTodoAction } from '../store/actions/taskActions'\r\n\r\nconst TodoInput = ({ my, addTodo }) => {\r\n  const [todo, setTodo] = useState('')\r\n  const inputRef = useRef()\r\n\r\n  const handleTodoChange = (e) => {\r\n    setTodo(e.target.value)\r\n  }\r\n\r\n  const handleCreateTodoButtonClick = () => {\r\n    if (todo !== '') {\r\n      // trigger add todo action\r\n      addTodo(todo)\r\n      // clear todo in state\r\n      setTodo('')\r\n    }\r\n  }\r\n\r\n  const addTodoEnterKeyCallback = useCallback(\r\n    (e) => {\r\n      if ((e.key === 'Enter' || e.keyCode === 13) && todo !== '') {\r\n        // trigger add todo action\r\n        addTodo(todo)\r\n        // clear todo in state\r\n        setTodo('')\r\n        // stop this event propagation from bubbling up\r\n        e.stopPropagation()\r\n      }\r\n    },\r\n    [addTodo, todo]\r\n  )\r\n\r\n  useEffect(() => {\r\n    const currentInputRef = inputRef.current\r\n    if (currentInputRef)\r\n      currentInputRef.addEventListener('keyup', addTodoEnterKeyCallback)\r\n\r\n    return () => {\r\n      if (currentInputRef)\r\n        currentInputRef.removeEventListener('keyup', addTodoEnterKeyCallback)\r\n    }\r\n  }, [inputRef, addTodoEnterKeyCallback])\r\n\r\n  return (\r\n    <Box my={my} display=\"flex\">\r\n      <TextField\r\n        ref={inputRef}\r\n        label=\"What needs to be done?\"\r\n        name=\"todo\"\r\n        variant=\"outlined\"\r\n        margin=\"dense\"\r\n        autoFocus\r\n        fullWidth\r\n        value={todo}\r\n        onChange={handleTodoChange}\r\n      />\r\n      <Box m={1}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={handleCreateTodoButtonClick}\r\n        >\r\n          Create\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nTodoInput.propTypes = {\r\n  my: PropTypes.number,\r\n  addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapActionToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (content) => dispatch(AddTodoAction(content))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapActionToProps)(TodoInput)\r\n","import React from 'react'\r\n\r\nexport default function GitHubLogo() {\r\n  return (\r\n    <svg viewBox=\"0 0 20 20\">\r\n      <path d=\"M10 0C4.5 0 0 4.5 0 10c0 4.4 2.9 8.2 6.8 9.5.5.1.7-.2.7-.5v-1.9c-2.5.5-3.2-.6-3.4-1.1-.1-.3-.6-1.2-1-1.4-.4-.2-.9-.6 0-.7.8 0 1.3.7 1.5 1 .9 1.5 2.4 1.1 3 .9.1-.6.4-1.1.6-1.3-2.2-.3-4.6-1.2-4.6-5 0-1.1.4-2 1-2.7 0-.3-.4-1.3.2-2.7 0 0 .8-.3 2.8 1 .7-.2 1.6-.3 2.4-.3s1.7.1 2.5.3c1.9-1.3 2.8-1 2.8-1 .5 1.4.2 2.4.1 2.7.6.7 1 1.6 1 2.7 0 3.8-2.3 4.7-4.6 4.9.4.3.7.9.7 1.9v2.8c0 .3.2.6.7.5 4-1.3 6.8-5.1 6.8-9.5C20 4.5 15.5 0 10 0z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport Container from '../../components/Container'\r\nimport Header from '../../components/Header'\r\nimport Tabs from '../../components/Tabs'\r\nimport TransitionAlert from '../../components/TransitionAlert'\r\nimport TodoInput from '../../components/TodoInput'\r\nimport GithubLogo from '../../components/GithubLogo'\r\n\r\nconst TaskPage = () => {\r\n  return (\r\n    <Container>\r\n      <Header\r\n        leftContent={\r\n          <Typography variant=\"h4\">Welcome to Arti's todo app!</Typography>\r\n        }\r\n        rightContent={\r\n          <a href=\"https://github.com/lartiquel/react-todo-app\">\r\n            <GithubLogo />\r\n          </a>\r\n        }\r\n      />\r\n      <TodoInput my={3} />\r\n      <TransitionAlert my={2} content=\"Task deleted!\" />\r\n      <Tabs my={2} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TaskPage\r\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { CssBaseline } from '@material-ui/core'\nimport Theme from './theme'\nimport TaskPage from './pages/task'\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={Theme}>\n      <CssBaseline />\n      <TaskPage />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}